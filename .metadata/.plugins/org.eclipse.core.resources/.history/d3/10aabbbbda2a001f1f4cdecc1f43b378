package dao;

import pojos.User;
import static utils.HibernateUtils.getFactory;

import java.io.Serializable;
import java.util.List;

import org.hibernate.*;

public class UserDaoImpl implements IUserDao {

	@Override
	public String registerUser(User user) {
		String msg="User reg failed";
		Session session=getFactory().openSession();
		
 		Transaction tx=session.beginTransaction();
		try {
		     Serializable userId =session.save(user);
			
			tx.commit();
			msg="user registered successfull with ID="+userId; 
		}catch(RuntimeException e)
		{
		 if(tx!=null)
			 tx.rollback();
		 throw e;
		}
		finally {
		 if(session != null)
			 session.close();
		}
		return msg;
	}

	@Override
	public String registerUserWIthGetCurrentSession(User user) {
		String msg="User reg failed";
		Session session=getFactory().getCurrentSession();
		
 		Transaction tx=session.beginTransaction();
		try {
		     //Serializable userId =session.save(user);
			session.persist(user);
			tx.commit();
			msg="user registered successfull with ID="+user.getUserId(); 
		}catch(RuntimeException e)
		{
		 if(tx!=null)
			 tx.rollback();
		 throw e;
		}
		
		return msg;
	}

	@Override
	public User getUserDetails(int userId) {
		Session session=getFactory().getCurrentSession();
		User user=null;
		Transaction tx = session.beginTransaction();
		
		try {
			 user=session.get(User.class, userId);
			
			tx.commit();
		}
		catch (RuntimeException e) {
			if(tx != null)
			
			 	tx.rollback();
			    throw e;
		}
		return user;
		
	}

	@Override
	public List<User> getAllUsers() {
		List<User> users=null;
		String jpql="select u from User u"; 
		Session session=getFactory().getCurrentSession();
		Transaction tx = session.beginTransaction();
		
		try {
		    users=session.createQuery(jpql,User.class).getResultList();	 
			tx.commit();
		}
		catch(RuntimeException e) {
			if(tx!=null)
				tx.rollback();
			throw e;
		}
		return null;
	}

}
